```json
{"exec-mode":"default","platform":"iOS","uti":"com.xamarin.workbook","packages":[]}
```

```csharp
using UIKit;
using CoreGraphics;
using LocalAuthentication;
```

```csharp
var window = new UIWindow(UIScreen.MainScreen.Bounds);
window.MakeKeyAndVisible();
var vc = new UIViewController();
window.RootViewController = vc;
vc.View.BackgroundColor = UIColor.Brown
```

```csharp
var button = UIButton.FromType (UIButtonType.System);
```

```csharp
button.Frame = new CGRect(20, 200, 280, 40);
button.SetTitle("Locally Authenticate ME!", UIControlState.Normal)
```

```csharp
vc.View.AddSubview(button)
```

```csharp
var vcAuthenticated = new UIViewController();
var label = new UILabel(new CGRect(20, 200, 280, 40));
label.Text = "You are now Authenticated"
```

```csharp
var context = new LAContext();
NSError AuthError;
var myReason = new NSString("To gain secret access");
```

```csharp
button.TouchUpInside += (sender, e) => {
                if (context.CanEvaluatePolicy(LAPolicy.DeviceOwnerAuthenticationWithBiometrics, out AuthError)){
                var replyHandler = new LAContextReplyHandler((success, error) => {

                    vc.InvokeOnMainThread(()=>{
                        if(success){
							vc.PresentViewController(vcAuthenticated, true, null);
                        }
                        else{
                            //Show fallback mechanism here
							button.SetTitle("You shall not pass", UIControlState.Disabled);
                        }
                    });

                }); 
                context.EvaluatePolicy(LAPolicy.DeviceOwnerAuthenticationWithBiometrics, myReason, replyHandler);
            };
            };
```

